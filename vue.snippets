# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet template-pug-page "Empty Pug Page" b
<template lang="pug">
Layout
</template>
<script setup>
import Layout from "../layouts/panel.vue";
import { ref } from "vue";

</script>

endsnippet

snippet import-scripts-helper "Imporrt base script helper" b
import { api, toast } from "@/scripts";
endsnippet

snippet useQuasar "useQuasar" b
import { useQuasar } from "quasar";

const \$q = useQuasar();
endsnippet

snippet import-vue "import ref vue" b
import { ref } from 'vue';
endsnippet

snippet importSelectClassComponent "importSelectClassComponent" b
import SelectClass from "@Student/views/components/SelectSchoolClass.vue";
endsnippet

snippet ImportInertia "import inertiajs/ interia" b
import { Inertia } from '@inertiajs/inertia'
endsnippet

snippet console.log "Console Log" b
console.log(${1});
endsnippet

snippet dialogQuasar "dialogQuasar" b
\$q.dialog({
component: ${1},
}).onOk(() => {
datatable.value.refresh();
});
endsnippet
snippet templateDialogQuasar "templateDialogQuasar" b
<template lang="pug">
q-dialog(ref='dialogRef' @hide='onDialogHide')
	q-card.q-dialog-plugin
		q-card-section
			div.text-h5 ${1}

		q-card-actions(align='right')
			q-btn(color='primary' label='OK' @click='onOKClick')
			q-btn(color='primary' label='Cancel' @click='onDialogCancel')
</template>

<script setup>
import { useDialogPluginComponent } from "quasar";

const props = defineProps({});

defineEmits([...useDialogPluginComponent.emits]);

const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } =
useDialogPluginComponent();
function onOKClick() {
onDialogOK();
}
</script>

endsnippet

snippet qinput "Qinput" b
q-input(:label="__(${1})" v-model=""  hint="" :rules="[\$rules.required()]" v-uppercase stack-label)
endsnippet
